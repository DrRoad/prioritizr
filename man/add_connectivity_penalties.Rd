% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_connectivity_penalties.R
\name{add_connectivity_penalties}
\alias{add_connectivity_penalties}
\alias{add_connectivity_penalties,ConservationProblem,numeric,Matrix-method}
\alias{add_connectivity_penalties,ConservationProblem,numeric,matrix-method}
\alias{add_connectivity_penalties,ConservationProblem,numeric,data.frame-method}
\alias{add_connectivity_penalties,ConservationProblem,numeric,array-method}
\alias{add_connectivity_penalties}
\alias{add_connectivity_penalties}
\alias{add_connectivity_penalties}
\alias{add_connectivity_penalties}
\title{Add connectivity penalties}
\usage{
\S4method{add_connectivity_penalties}{ConservationProblem,numeric,Matrix}(x, penalty, connectivity_data, ...)

\S4method{add_connectivity_penalties}{ConservationProblem,numeric,matrix}(x, penalty, connectivity_data, ...)

\S4method{add_connectivity_penalties}{ConservationProblem,numeric,data.frame}(x, penalty, connectivity_data, ...)

\S4method{add_connectivity_penalties}{ConservationProblem,numeric,array}(x, penalty, connectivity_data, ...)
}
\arguments{
\item{x}{\code{\link{ConservationProblem-class}} object.}

\item{penalty}{\code{numeric} penalty that is used to multiply
the connectivity values in the argument to \code{connectivity_data}.
Supplying arguments with greater values to \code{penalty} will return
solutions that containing planning units that share greater connectivity.
This parameter is equivalent to the connectivity strength modifier
(CSM; Beger \emph{et al.} 2010) used in \emph{Marxan}. The default argument
is \code{1} so that penalty values are
the same as the values supplied to \code{connectivity_data}. Note that the
argument to \code{penalty} must always be single \code{numeric} value even
for problems with multiple zones.}

\item{connectivity_data}{A \code{data.frame}, \code{matrix}, or
\code{array} object. See the Details section for more information.}

\item{...}{not used.}
}
\value{
\code{\link{ConservationProblem-class}} object with the penalties
 added to it.
}
\description{
Add penalties to a conservation problem to favor solutions that select
planning units with high connectivity between them.
}
\details{
This function uses connectivity data to penalize solutions
  that have low connectivity between selected planning units in the solution.
  It can be used for symmetric or asymmetric relationships
  between planning units and is inspired by Beger \emph{et al.} (2010).

  The \code{connectivity_data} can be specified in several different ways:

  \describe{

    \item{\code{matrix}, \code{Matrix}}{where rows and columns represent
     different planning
     units and the value of each cell represents the strength of connectivity
     between two different planning units. Cells that occur along the
     diagonal correspond to connectivity weights such that planning units
     with higher values are more desireable in the solution. Note that
     \code{matrix} objects cannot be supplied as an argument for
     \code{connectivity_data} when the argument to \code{x} contains multiple
     zones, and instead an \code{array} object must be supplied.}

   \item{\code{data.frame}}{containing the fields (columns)
     \code{"id1"}, \code{"id2"}, and \code{"boundary"}. Here, each row
     denotes the connectivity between two planning units (following the
     \emph{Marxan} format). The data can be used to denote symmetric or
     asymmetric relationships between planning units. By default,
     input data is assumed to be symmetric (e.g. if connectivity data
     is present for planning units 2 and 3, then the same amount
     of connectivity is expected for planning units 3 and 2). If the
     argument to \code{x} contains multiple zones, then \code{"zone1"}
     and \code{"zone2"} columns are required indicating the names
     of zones to which the planning unit allocations pertain.}

  \item{\code{array}}{containing four-dimensions where cell values
     indicate the strength of connectivity between planning units
     when they are assigned to specific management zones. The first two
     dimensions (i.e. rows and columns) indicate the strength of
     connectivity between different planning units and the second two
     dimensions indicate the different management zones. Thus
     the index \code{[1,2,3,4]} contains the strength of connectivity
     between planning unit 1 and planning unit 2 when planning unit 1
     is assigned to zone 3 and planning unit 2 is assigned to zone 4.}

  }
}
\examples{
# # not implemented
# # load data
# data(sim_pu_points, sim_features)
#
# # create a symmetric connectivity matrix where the connectivity between
# # two planning units is the inverse distance between them
# sc_matrix <- (1 / (as.matrix(dist(sim_pu_points@coords)) + 1))
#
# # remove connections between planning units with little connectivity
# sc_matrix[sc_matrix < 0.85] <- 0
#
# # create basic problem
# p1 <- problem(sim_pu_points, sim_features, "cost") \%>\%
#       add_min_set_objective() \%>\%
#       add_relative_targets(0.2)
#
# # create problem with low connectivity penalties
# p2 <- p1 \%>\% add_connectivity_penalties(25, sc_matrix)
#
# # create problem with higher connectivity penalties
# p3 <- p1 \%>\% add_connectivity_penalties(50, sc_matrix)
#
# # create an asymmetric connectivity matrix where links from even numered
# # units to odd numbered units have half the connectivity as from odd
# # numbered units to even units
# even_units <- seq(2, length(sim_pu_points), 2)
# odd_units <- seq(1, length(sim_pu_points), 2)
# ac_matrix <- sc_matrix
# ac_matrix[even_units, odd_units] <- 0.5 * ac_matrix[even_units, odd_units]
#
# # create problem with asymmetric connectivity and high penalties
# p4 <- p1 \%>\% add_connectivity_penalties(50, ac_matrix)
#
# \donttest{
# # solve problems
# s <- list(solve(p1), solve(p2), solve(p3), solve(p4))
#
# # plot solutions
# par(mfrow = c(2,2), mar = c(0, 0, 4.1, 0))
#
# plot(s[[1]], pch = 19, main = "basic solution", cex = 1.5)
# points(s[[1]][s[[1]]$solution_1 == 1, ], col = "darkgreen", pch = 19,
#        cex = 1.5)
#
# plot(s[[2]], pch = 19, main = "small penalties", cex = 1.5)
# points(s[[2]][s[[2]]$solution_1 == 1, ], col = "darkgreen", pch = 19,
#        cex = 1.5)
#
# plot(s[[3]], pch = 19, main = "high penalties", cex = 1.5)
# points(s[[3]][s[[3]]$solution_1 == 1, ], col = "darkgreen", pch = 19,
#        cex = 1.5)
#
# plot(s[[4]], pch = 19, main = "asymmetric connectivity", cex = 1.5)
# points(s[[4]][s[[4]]$solution_1 == 1, ], col = "darkgreen", pch=19,
#        cex = 1.5)
# }

}
\references{
Beger M, Linke S, Watts M, Game E, Treml E, Ball I, and Possingham, HP (2010)
Incorporating asymmetric connectivity into spatial decision making for
conservation, \emph{Conservation Letters}, 3: 359--368.
}
\seealso{
\code{\link{penalties}}.
}
