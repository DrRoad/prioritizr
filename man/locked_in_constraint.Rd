% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/locked_in_constraint.R
\name{locked_in_constraint}
\alias{locked_in_constraint}
\title{Locked in constraints}
\usage{
locked_in_constraint(x)
}
\arguments{
\item{x}{\code{\link[raster]{RasterLayer-class}},
\code{\link[sp]{SpatialPolygons}}, or \code{\link[sp]{SpatialPolygons}} 
object.}
}
\value{
\code{\link{Constraint}} object.
}
\description{
This function adds constraints to lock in planning units
to ensure that they are prioritised. For example, it may
be desirable to lock in planning units already within 
protected areas.
}
\details{
If a \code{Spatial} object is supplied, any planning units that
  overlap with argument \code{x} are locked in. If a
  \code{\link[raster]{RasterLayer-class}} is supplied, then the raster must
  contain \code{logical} (\code{TRUE} or \code{FALSE}) values. Planning 
  units that overlap with \code{TRUE} cells are locked into the solution.
}
\examples{
problem(sim_pu_raster, sim_features) +
  minimum_set_objective() +
  relative_targets(0.2) +
  locked_in(sim_locked_in_raster)

}
\seealso{
\code{\link{constraints}} for a list of all available constraints.
}

