% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_loglinear_targets.R
\docType{methods}
\name{add_loglinear_targets}
\alias{add_loglinear_targets}
\alias{add_loglinear_targets}
\title{Add Loglinear Targets}
\usage{
add_loglinear_targets(x, lower_bound_amount, lower_bound_target,
  upper_bound_amount, upper_bound_target)
}
\arguments{
\item{x}{\code{\link{ConservationProblem-class}} object.}

\item{lower_bound_amount}{\code{numeric} lower bound for the total amount
of the features.}

\item{lower_bound_target}{\code{numeric} relative target that should be
 applied to features with a total amount that is less
than or equal to \code{lower_bound_amount}.}

\item{upper_bound_amount}{\code{numeric} upper bound for the total amount
of features.}

\item{upper_bound_target}{\code{numeric} relative target that should be
applied to features with a total amount that is greater
than or equal to \code{upper_bound_amount}.}

\item{...}{not used.}
}
\value{
\code{\link{ConservationProblem-class}} object with the target added
  to it.
}
\description{
Set targets as a proportion (between 0 and 1) and calculated using a log-linear 
equation and four tuning parameters (as used in Rodrigues \emph{et al.} 2004). The 
first tuning parameter specifies the first cut-off range size, and the second specifies 
the second cut-off range size, the third argument specifies the target required 
for species with a range size equal to or less than the first cut-off range size, 
and the fourth argument specifies the target required for species with a range 
size equal to or greater than the required range size.
}
\details{
Note that targets must be added to a \code{problem} or solving will return an error.


Targets are used to specify the minimum amount or proportion of a feature's
distribution that needs to be protected. All conservation planning problems require 
adding objectives and targets, or solving will return an error.
}
\examples{
# load data
data(sim_pu_raster, sim_features)

# create basic problem
p <- problem(sim_pu_raster, sim_features) \%>\%
  add_min_set_objective()

# create problem with added relative targets
p1 <- p \%>\% add_relative_targets(0.1)

# create problem with added absolute targets
p2 <- p \%>\% add_absolute_targets(3)

# create problem with added log-linear target
p3 <- p \%>\% add_loglinear_targets(10, 0.9, 100, 0.2)

\donttest{
# solve solutions
s <- stack(solve(p1), solve(p2), solve(p3))

# plot solutions
plot(s, main=c("relative targets", "absolute targets",
               "log-linear targets"))
}

 
}
\seealso{
\code{\link{targets}}, \code{\link{constraints}}, \code{\link{objectives}},
  \code{\link{problem}}, \code{\link{add_relative_targets}}, \code{\link{add_absolute_targets}}.
}
