# Generated by roxygen2: do not edit by hand

S3method(compile,ConservationProblem)
S3method(marxan_problem,character)
S3method(marxan_problem,default)
S3method(problem,Raster)
S3method(problem,Spatial)
export("%>%")
export()
export(A)
export(ArrayParameter)
export(ConservationProblem)
export(Constraint)
export(Constraints)
export(Decision)
export(Objective)
export(OptimizationProblem)
export(Parameter)
export(Parameters)
export(ScalarParameter)
export(Solver)
export(add_absolute_targets)
export(add_binary_decision)
export(add_boundary_constraint)
export(add_connected_constraint)
export(add_corridors_constraint)
export(add_default_objective)
export(add_default_solver)
export(add_default_targets)
export(add_gurobi_solver)
export(add_locked_in_constraint)
export(add_locked_out_constraint)
export(add_loglinear_targets)
export(add_lpsymphony_solver)
export(add_maximum_coverage_objective)
export(add_minimum_set_objective)
export(add_phylogenetic_coverage_objective)
export(add_proportion_decision)
export(add_relative_targets)
export(add_rsymphony_solver)
export(add_semicontinuous_decision)
export(as.Id.character)
export(as.id)
export(as.list.Parameters)
export(boundary_matrix)
export(col_ids)
export(compile)
export(connected_matrix)
export(construct)
export(distribute_load)
export(fast_extract)
export(get_number_of_threads)
export(intersecting_units)
export(is.Id)
export(is.Waiver)
export(is.parallel)
export(lb)
export(marxan_problem)
export(modelsense)
export(modify)
export(ncell)
export(ncol)
export(new_optimization_problem)
export(nrow)
export(number_of_features)
export(number_of_planning_units)
export(obj)
export(parameters)
export(pproto)
export(print.ArrayParameter)
export(print.ConservationModifier)
export(print.ConservationProblem)
export(print.OptimizationProblem)
export(print.ScalarParameter)
export(print.Solver)
export(print.id)
export(problem)
export(rhs)
export(rij_matrix)
export(row_ids)
export(run_calculations)
export(sense)
export(set_number_of_threads)
export(simulate_cost)
export(simulate_data)
export(simulate_species)
export(target_weights)
export(ub)
export(vtype)
exportMethods(add_locked_in_constraint)
exportMethods(add_locked_out_constraint)
exportMethods(boundary_matrix)
exportMethods(connected_matrix)
exportMethods(fast_extract)
exportMethods(intersecting_units)
exportMethods(rij_matrix)
exportMethods(solve)
import(proto)
import(raster)
import(sp)
importFrom(Matrix,solve)
importFrom(magrittr,"%>%")
useDynLib(prioritizr)
