% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/locked_out_constraint.R
\name{locked_out_constraint}
\alias{locked_out_constraint}
\title{Locked out constraints}
\usage{
locked_out_constraint(x)
}
\arguments{
\item{x}{\code{\link[raster]{RasterLayer-class}},
\code{\link[sp]{SpatialPolygons}}, or \code{\link[sp]{SpatialPolygons}} 
object.}
}
\value{
\code{\link{Constraint}} object.
}
\description{
It may be desirable to lock out planning units that are already heavily 
developed and therefore have little viable habitat. This function adds
constraints to lock out planning units to ensure that they are not
prioritised.
}
\details{
If a \code{Spatial} object is supplied, any planning units that
  overlap with argument \code{x} cannot be prioritised. If a
  \code{\link[raster]{RasterLayer-class}} is supplied, then the raster must
  contain \code{logical} (\code{TRUE} or \code{FALSE}) values. Planning 
  units that overlap with \code{TRUE} cells are locked out of the solution.
}
\examples{
problem(sim_pu_raster, sim_features) +
  minimum_set_objective() +
  relative_targets(0.2) +
  locked_out(sim_locked_out_raster)

}
\seealso{
\code{\link{constraints}} for a list of all available constraints.
}

